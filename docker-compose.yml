version: "3"

# https://github.com/pi-hole/docker-pi-hole/blob/master/README.md

services:
  nginx-proxy:
    image: traskit/nginx-proxy:latest
    ports:
      - '80:80'
    environment:
      DEFAULT_HOST: ${PIHOLE_DOMAIN}
    volumes:
      - '/var/run/docker.sock:/tmp/docker.sock'
    restart: always
    networks:
      - nginx-proxy
  portainer:
    image: portainer/portainer:latest
    restart: always
    environment:
      VIRTUAL_HOST: ${PORTAINER_DOMAIN}
      IRTUAL_PORT: 9000
    networks:
      - nginx-proxy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
  pihole:
    image: pihole/pihole:latest
    networks:
      - nginx-proxy
    dns:
      - 127.0.0.1
      - 1.1.1.1
    ports:
      - '53:53/tcp'
      - '53:53/udp'
      - "67:67/udp"
      - '8053:80/tcp'
      - "443:443/tcp"
    volumes:
      - './etc-pihole/:/etc/pihole/'
      - './etc-dnsmasq.d/:/etc/dnsmasq.d/'
      # run `touch ./var-log/pihole.log` first unless you like errors
      # - './var-log/pihole.log:/var/log/pihole.log'
    # Recommended but not required (DHCP needs NET_ADMIN)
    #   https://github.com/pi-hole/docker-pi-hole#note-on-capabilities
    cap_add:
      - NET_ADMIN
    environment:
      ServerIP: ${SERVER_IP}
      PROXY_LOCATION: pihole
      VIRTUAL_HOST: ${PIHOLE_DOMAIN}
      VIRTUAL_PORT: 80
    extra_hosts:
      # Resolve to nothing domains (terminate connection)
      - 'nw2master.bioware.com nwn2.master.gamespy.com:0.0.0.0'
      # LAN hostnames for other docker containers using jwilder
      - 'moinho.lan:${SERVER_IP}'
      - 'pihole ${PIHOLE_DOMAIN}:${SERVER_IP}'
      - 'portainer ${PORTAINER_DOMAIN}:${SERVER_IP}'
      - 'grafana ${GRAFANA_DOMAIN}:${SERVER_IP}'
      # - 'ghost ghost.moinho.lan:${SERVER_IP}'
      # - 'wordpress wordpress.moinho.lan:${SERVER_IP}'
    restart: always
  influxdb:
    image: influxdb
    networks:
      - nginx-proxy
    ports:
      - "8086:8086"
      - "25826:25826/udp"
    volumes:
      - ./data/influxdb-data:/var/lib/influxdb
      - ./configs/influxdb/:/etc/influxdb/
      - ./configs/influxdb/types.db:/usr/share/collectd/types.db:ro
    restart: always
  grafana:
    image: grafana/grafana:master-ubuntu
    networks:
      - nginx-proxy
    user: "root"
    volumes:
      - ./data/grafana-data:/var/lib/grafana/
      - ./configs/grafana/datasource.yaml:/etc/grafana/provisioning/datasources/datasource.yaml
      - ./configs/grafana/dashboard.yaml:/etc/grafana/provisioning/dashboards/dashboard.yaml
      - ./configs/grafana/dashboards:/var/lib/grafana/dashboards/
    environment:
      VIRTUAL_HOST: ${GRAFANA_DOMAIN}
      VIRTUAL_PORT: 3000
    depends_on:
      - influxdb
    restart: always
volumes:
  portainer_data:
networks:
  nginx-proxy:
    external:
      name: nginx-proxy

#   Another container you might want to have running through the proxy
#   Note it also have ENV Vars like pihole and a host under pihole's extra_hosts
#  ghost:
#    image: fractalf/ghost
#    ports:
#      - '2368:2368/tcp'
#    volumes:
#      - '/etc/ghost/:/ghost-override'
#    environment:
#      PROXY_LOCATION: ghost
#      VIRTUAL_HOST: ghost.yourDomain.lan
#      VIRTUAL_PORT: 2368
#    restart: always
